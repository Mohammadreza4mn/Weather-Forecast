{"version":3,"sources":["components/Weather.js","App.js","serviceWorker.js","index.js"],"names":["main","icon","Weather","props","field_update","bind","check_weather","state","city_name","city_weather","city_temperature","city_wind","pic","event","this","setState","target","value","localStorage","setItem","JSON","stringify","getItem","parse","document","querySelector","textContent","preventDefault","fetch","then","res","json","message","weather","wind","query","page","Math","floor","random","results","map","item","Object","values","urlPic","push","urls","small","gradient","background","className","id","style","src","type","placeholder","autoFocus","onChange","onClick","href","title","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.246b5b89.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nlet main, icon = '50d';\r\nclass Weather extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.field_update = this.field_update.bind(this);\r\n    this.check_weather = this.check_weather.bind(this);\r\n    this.state = {\r\n      city_name: '',\r\n      city_weather: [],\r\n      city_temperature: {},\r\n      city_wind: {},\r\n      pic:[]\r\n    }\r\n  }\r\n\r\n  field_update(event) {\r\n    this.setState({ city_name: event.target.value })\r\n    localStorage.setItem('cityName',JSON.stringify(event.target.value))\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(localStorage.getItem('apiWeather')){\r\n      this.setState({\r\n        city_weather : JSON.parse(localStorage.getItem('apiWeather')),\r\n        city_temperature : JSON.parse(localStorage.getItem('apiMain')),\r\n        city_wind : JSON.parse(localStorage.getItem('apiWind')),\r\n        city_name : JSON.parse(localStorage.getItem('cityName')),\r\n        pic : JSON.parse(localStorage.getItem('pic'))\r\n      })\r\n      document.querySelector('#update').textContent = \"به روز رسانی\";\r\n    }else{\r\n      document.querySelector('#update').textContent = \"بررسی\";\r\n    }\r\n  }\r\n\r\n  check_weather(event) {\r\n    if(this.state.city_name){ //prevent empty input\r\n    event.preventDefault();\r\n    const units = 'metric';\r\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${this.state.city_name}&appid=cd8d1f30feddefbda7be4d6e41d66b7d&units=${units}`)\r\n      .then(res => res.json())\r\n      .then(\r\n        json => {\r\n          if(json.message){ //city not found\r\n            this.setState({city_name : json.message})\r\n          }else{\r\n            this.setState({\r\n              city_weather: json.weather,\r\n              city_temperature: json.main,\r\n              city_wind: json.wind\r\n            })\r\n            localStorage.setItem('apiWeather',JSON.stringify(json.weather));\r\n            localStorage.setItem('apiMain',JSON.stringify(json.main));\r\n            localStorage.setItem('apiWind',JSON.stringify(json.wind));\r\n          }\r\n        }\r\n      )\r\n      let query = `${main} sky`;\r\n      const per_page = '8';\r\n      let page = Math.floor(Math.random() * (100-1))+1;\r\n      fetch(`https://api.unsplash.com/search/photos/?client_id=_PddIXc9E6hWsR9-ItExkNG46hXQiu8JjJNZVE46O5s&query=${query}&per_page=${per_page}&page=${page}`)\r\n      .then(res => res.json())\r\n      .then(\r\n        json => {\r\n          this.setState({\r\n            pic: json.results\r\n          })\r\n          localStorage.setItem('pic',JSON.stringify(json.results));\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.state.city_weather.map(item => {\r\n      main = item.main\r\n      icon = item.icon\r\n    });\r\n    let city_temperature=Object.values(this.state.city_temperature);\r\n    let city_wind=Object.values(this.state.city_wind);\r\n    \r\n    let urlPic = [];\r\n    this.state.pic.map(\r\n      item => (\r\n        urlPic.push(item.urls.small)\r\n      )\r\n    )\r\n\r\n    const checkTemperature=()=>{\r\n      if(city_temperature[0]<=10){return \"linear-gradient(to bottom, #00d1ff, #c471ed, #fff0f1)\" }\r\n      else if(city_temperature[0]<=20){return \"linear-gradient(to bottom, #38dbff, #c471ed, #ffadb3)\" }\r\n      else if(city_temperature[0]<=30){return \"linear-gradient(to bottom, #70e5ff, #c471ed, #ff707b)\" }\r\n      else if(city_temperature[0]>=30){return \"linear-gradient(to bottom, #b5f2ff, #c471ed, #ff1729)\" }\r\n      else{return \"linear-gradient(to bottom, #12c2e9, #c471ed, #f64f59)\" }\r\n    }\r\n    const gradient={//style #gradient\r\n      background:checkTemperature()\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center align-content-center vh-100\">\r\n            <div className=\"card bg-dark col-md-8 border\">\r\n              <div className=\"row h-100 align-items-end\">\r\n                <div className=\"col-md-6 p-0\" id=\"gradient\" style={gradient} >\r\n                  <div className=\"card-img-overlay text-light d-flex align-items-center justify-content-between\">\r\n                    <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} />\r\n                    <div className=\"d-flex flex-column align-items-end\">\r\n                      <h2 className=\"card-title font-weight-bold bg-dark rounded p-2\">{this.state.city_name}</h2>\r\n                      <p className=\"card-text bg-dark rounded p-2\">{city_temperature[0]} °C</p>\r\n                      <p className=\"card-text bg-dark rounded p-2\">{main}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"card-body bg-dark col-md-6\">\r\n                  <table className=\"table table-borderless text-light\">\r\n                    <tbody>\r\n                      <tr className=\"d-flex justify-content-between\">\r\n                        <td>{city_temperature[1]}</td>\r\n                        <td>دمای احساسی</td>\r\n                      </tr>\r\n                      <tr className=\"d-flex justify-content-between\">\r\n                        <td>{city_temperature[2]}</td>\r\n                        <td>کمینه دما</td>\r\n                      </tr>\r\n                      <tr className=\"d-flex justify-content-between\">\r\n                        <td>{city_temperature[3]}</td>\r\n                        <td>بیشینه دما</td>\r\n                      </tr>\r\n                      <tr className=\"d-flex justify-content-between\">\r\n                        <td>{city_temperature[5]} %</td>\r\n                        <td>رطوبت</td>\r\n                      </tr>\r\n                      <tr className=\"d-flex justify-content-between\">\r\n                        <td>{city_wind[0]} m/s</td>\r\n                        <td>سرعت باد</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                  <div className=\"input-group mt-4\">\r\n                    <input value={this.state.city_name} type=\"text\" className=\"form-control bg-transparent text-center text-light\" placeholder=\"نام شهر\" autoFocus onChange={this.field_update} />\r\n                    <div className=\"input-group-append\">\r\n                    <button id=\"update\" className=\"btn border-light text-light mb-3\" onClick={this.check_weather}>\r\n                    {/* textContent */}\r\n                </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <a className=\"badge-light badge mt-2\" target=\"_blank\" href=\"https://openweathermap.org\">\r\n                  <small>\r\n                    OpenWeather API\r\n            </small>\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-3 d-none d-md-block gallery\">\r\n              <div className=\"grid d-flex flex-column flex-wrap align-items-center\">\r\n                <a href=\"https://github.com/mohammadreza4mn\" target=\"_blank\" className=\"m-1\" title=\"Github\">\r\n                <img src=\"public/../assets/img/m.m.jpg\" className=\"img-fluid shadow-lg rounded border\"/>\r\n                </a>\r\n                <img src={urlPic[1]} className=\"img-fluid shadow-lg rounded border m-1\"/>\r\n                <img src={urlPic[0]} className=\"img-fluid shadow-lg rounded border m-1\"/>\r\n                <img src={urlPic[2]} className=\"img-fluid shadow-lg rounded border m-1\"/>\r\n                <img src={urlPic[3]} className=\"img-fluid shadow-lg rounded border m-1\"/>\r\n                <img src={urlPic[4]} className=\"img-fluid shadow-lg rounded border m-1\"/>\r\n                <img src={urlPic[5]} className=\"img-fluid shadow-lg rounded border m-1\"/>\r\n                <img src={urlPic[6]} className=\"img-fluid shadow-lg rounded border m-1\"/>\r\n                <img src={urlPic[7]} className=\"img-fluid shadow-lg rounded border m-1\"/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\nexport default Weather;","import React from 'react';\r\nimport Weather from './components/Weather';\r\n\r\n\r\nclass App extends React.Component{\r\n\r\n  render(){\r\n    return(\r\n      <Weather/>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}